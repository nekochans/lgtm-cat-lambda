service: lgtm-cat-lambda

frameworkVersion: '>=2.0.0 <3.0.0'

plugins:
  - serverless-prune-plugin

provider:
  name: aws
  runtime: go1.x
  stage: ${env:DEPLOY_STAGE}
  region: ${env:REGION}
  profile: ${env:AWS_PROFILE}
  logRetentionInDays: 3
  lambdaHashingVersion: 20201221
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:*
          Resource: "*"
  environment:
    DEPLOY_STAGE: ${env:DEPLOY_STAGE}
    REGION: ${env:REGION}

custom:
  defaultStage: stg
  prune:
    automatic: true
    number: 1

package:
  patterns:
    - '!./**'
    - ./bin/**
    - ./fonts/**

functions:
  generateLgtmImage:
    handler: bin/generatelgtmimage
    environment:
      DESTINATION_BUCKET_NAME: ${env:DESTINATION_BUCKET_NAME}
    events:
      - s3:
          bucket: ${env:GENERATE_TRIGGER_BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .png
          existing: true
      - s3:
          bucket: ${env:GENERATE_TRIGGER_BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .jpg
          existing: true
      - s3:
          bucket: ${env:GENERATE_TRIGGER_BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .jpeg
          existing: true
  storeLgtmImage:
    handler: bin/storelgtmimage
    environment:
      DB_READER_HOSTNAME: ${env:DB_HOSTNAME}
      DB_USERNAME: ${env:DB_USERNAME}
      DB_PASSWORD: ${env:DB_PASSWORD}
      DB_NAME: ${env:DB_NAME}
    vpc:
      securityGroupIds:
        - ${env:SECURITY_GROUP_ID}
      subnetIds:
        - ${env:SUBNET_ID_1}
        - ${env:SUBNET_ID_2}
    events:
      - s3:
          bucket: ${env:STORE_TRIGGER_BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .webp
          existing: true
